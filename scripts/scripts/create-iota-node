#!/bin/bash

# update
sudo apt update -qqy --fix-missing && sudo apt-get upgrade -y && sudo apt-get clean -y && sudo apt-get autoremove -y --purge

# deps
sudo apt install software-properties-common -y && sudo add-apt-repository ppa:webupd8team/java -y && sudo apt update && sudo apt install oracle-java8-installer curl wget jq git -y && sudo apt install oracle-java8-set-default -y

# set java to use
sudo sh -c 'echo JAVA_HOME="/usr/lib/jvm/java-8-oracle" >> /etc/environment' && source /etc/environment

# set up iri
sudo useradd -s /usr/sbin/nologin -m iota
sudo -u iota mkdir -p /home/iota/node /home/iota/node/ixi /home/iota/node/mainnetdb
sudo -u iota curl -O /home/iota/node/iri-1.4.1.4.jar https://github.com/iotaledger/iri/releases/download/v1.4.1.4/iri-1.4.1.4.jar

# create iota service
cat << "EOF" | sudo tee /lib/systemd/system/iota.service
[Unit]
Description=IOTA (IRI) full node
After=network.target

[Service]
WorkingDirectory=/home/iota/node
User=iota
PrivateDevices=yes
ProtectSystem=full
Type=simple
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=60
ExecStart=/usr/bin/java -Xmx6000m -Djava.net.preferIPv4Stack=true -jar iri-1.4.1.4.jar -c iota.ini
SyslogIdentifier=IRI
Restart=on-failure
RestartSec=30

[Install]
WantedBy=multi-user.target
Alias=iota.service

EOF

# create simple run script
cat << "EOF" | sudo -u iota tee /home/iota/node/run-node
#!/bin/bash
/usr/bin/java -Xmx6000m -Djava.net.preferIPv4Stack=true -jar iri-1.4.1.4.jar -c iota.ini

EOF

# load and enable iota.service
sudo systemctl daemon-reload && sudo systemctl enable iota.service

# create config
cat << "EOF" | sudo -u iota tee /home/iota/node/iota.ini
[IRI]
PORT = 14265
UDP_RECEIVER_PORT = 14600
TCP_RECEIVER_PORT = 15600
API_HOST = 0.0.0.0
IXI_DIR = ixi
HEADLESS = true
DEBUG = false
TESTNET = false
DB_PATH = mainnetdb
RESCAN_DB = false

REMOTE_LIMIT_API = "removeNeighbors, addNeighbors, interruptAttachingToTangle, attachToTangle, getNeighbors"

NEIGHBORS = []
EOF

# get latest db snapshot
cd /tmp/ && curl -LO http://db.iota.partners/IOTA.partners-mainnetdb.tar.gz && sudo -u iota tar xzfv /tmp/IOTA.partners-mainnetdb.tar.gz -C /home/iota/node/mainnetdb && rm /tmp/IOTA.partners-mainnetdb.tar.gz

# set up iri auto update
echo '*/15 * * * * root bash -c "bash <(curl -s https://gist.githubusercontent.com/zoran/48482038deda9ce5898c00f78d42f801/raw)"' | sudo tee /etc/cron.d/iri_updater > /dev/null

# get nodejs
cd /tmp && curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - && sudo apt update && sudo apt install -y nodejs

# monitoring
sudo useradd -s /usr/sbin/nologin -m prometheus && sudo -u prometheus mkdir -p /home/prometheus/prometheus2

cd /tmp && curl -LO https://github.com/prometheus/prometheus/releases/download/v2.0.0/prometheus-2.0.0.linux-amd64.tar.gz && sudo -u prometheus tar xzfv /tmp/prometheus-2.0.0.linux-amd64.tar.gz -C /home/prometheus/prometheus2 --strip-components 1 && rm /tmp/prometheus-2.0.0.linux-amd64.tar.gz

cat << "EOF" | sudo -u prometheus tee /home/prometheus/prometheus2/prometheus.yml
global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets:
        - 'localhost:9090'

  - job_name: 'node_exporter'
    scrape_interval: 5s
    static_configs:
      - targets:
        - 'localhost:9100'
    params:
      collect[]:
        - cpu
        - meminfo
        - diskstats
        - netdev
        - netstat

  - job_name: 'iota_exporter'
    scrape_interval: 5s
    static_configs:
      - targets:
        - 'localhost:9311'
EOF

cat << "EOF" | sudo tee /lib/systemd/system/prometheus.service
[Unit]
Description=Prometheus
Wants=network-online.target
After=network.target

[Service]
Type=simple
WorkingDirectory=/home/prometheus/prometheus2
User=prometheus
PrivateDevices=yes
ProtectSystem=full
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=60
ExecStart=/home/prometheus/prometheus2/prometheus --web.listen-address="localhost:9090" --config.file=/home/prometheus/prometheus2/prometheus.yml
Restart=on-failure
RestartSec=30

[Install]
WantedBy=multi-user.target
Alias=prometheus.service

EOF

sudo systemctl daemon-reload && sudo systemctl enable prometheus.service && sudo service prometheus start

sudo -u prometheus mkdir -p /home/prometheus/node_exporter && cd /tmp && curl -LO https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz && sudo -u prometheus tar xzfv /tmp/node_exporter-0.15.2.linux-amd64.tar.gz -C /home/prometheus/node_exporter --strip-components 1 && rm /tmp/node_exporter-0.15.2.linux-amd64.tar.gz

cat << "EOF" | sudo tee /lib/systemd/system/node_exporter.service
[Unit]
Description=Prometheus Node Exporter
Wants=network-online.target
After=network.target

[Service]
Type=simple
WorkingDirectory=/home/prometheus/node_exporter
User=prometheus
PrivateDevices=yes
ProtectSystem=full
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=60
ExecStart=/home/prometheus/node_exporter/node_exporter --web.listen-address='localhost:9100'
Restart=on-failure
RestartSec=30

[Install]
WantedBy=multi-user.target
Alias=node_exporter.service

EOF

sudo systemctl daemon-reload && sudo systemctl enable node_exporter.service && sudo service node_exporter start

cd /tmp && sudo apt install git -y && sudo -s -H -u prometheus git clone https://github.com/crholliday/iota-prom-exporter.git /home/prometheus/iota-prom-exporter && cd /home/prometheus/iota-prom-exporter && sudo -s -H -u prometheus npm install

cat << "EOF" | sudo -u prometheus tee /home/prometheus/iota-prom-exporter/config.js
let path = require('path')
global.rootPath = path.normalize(path.join(__dirname, '..', '..'))

module.exports = {
    // url and port of your IRI node
    iota_node_url: 'http://localhost:14265',

    // keep this
    stresstest_table_url: 'http://analytics.iotaledger.net/stresstest.table',

    // address and port where the exporter will be bound
    bind_address: '127.0.0.1',
    bind_port: 9311
}

EOF

cat << "EOF" | sudo tee /lib/systemd/system/iota_exporter.service
[Unit]
Description=Prometheus IOTA Exporter
Wants=network-online.target
After=network.target

[Service]
Type=simple
WorkingDirectory=/home/prometheus/iota-prom-exporter
User=prometheus
PrivateDevices=yes
ProtectSystem=full
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=60
ExecStart=/usr/bin/node /home/prometheus/iota-prom-exporter/app.js
Restart=on-failure
RestartSec=30

[Install]
WantedBy=multi-user.target
Alias=iota_exporter.service

EOF

sudo systemctl daemon-reload && sudo systemctl enable iota_exporter.service && sudo service iota_exporter start

sudo apt install -y wget libfontconfig && cd /tmp && curl -LO https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_4.6.3_amd64.deb && sudo dpkg -i grafana_4.6.3_amd64.deb && sudo rm grafana_4.6.3_amd64.deb

cat << "EOF" | sudo tee /etc/grafana/grafana.ini
app_mode = production
instance_name = ${HOSTNAME}

[server]
http_port = 3000
domain = localhost
root_url = http://localhost:3000
enable_gzip = true

[security]
# default admin user, created on startup
admin_user = admin
admin_password = admin
login_remember_days = 365
cookie_username = grafana_user
cookie_remember_name = grafana_remember

[users]
allow_sign_up = false
allow_org_create = false

[auth.anonymous]
enabled = false

EOF

sudo systemctl daemon-reload && sudo systemctl enable grafana-server

sudo service grafana-server start && sleep 6

curl -H "Content-Type: application/json" -X POST -u admin:admin -d '{"name":"Prometheus","type":"prometheus","typeLogoUrl":"","access":"proxy","url":"http://localhost:9090","basicAuth":false,"isDefault":true}' http://localhost:3000/api/datasources

cd /etc/grafana && sudo wget -O /etc/grafana/prometheus-dashboard-prometheus.json https://gist.githubusercontent.com/zoran/d0f21e67dc81eb424d4c22a234641788/raw

cd /etc/grafana && sudo wget -O /etc/grafana/prometheus-dashboard-node.json https://gist.githubusercontent.com/zoran/7fc75d8f9f45d6d6fbeac57200841e1a/raw

cd /etc/grafana && sudo wget -O /etc/grafana/prometheus-dashboard-iota.json https://gist.githubusercontent.com/zoran/085eae1b82bb83aa0cd6cabed3a2b9f0/raw

curl -H "Content-Type: application/json" -X POST -u admin:admin -d @/etc/grafana/prometheus-dashboard-prometheus.json http://localhost:3000/api/dashboards/db

curl -H "Content-Type: application/json" -X POST -u admin:admin -d @/etc/grafana/prometheus-dashboard-node.json http://localhost:3000/api/dashboards/db

curl -H "Content-Type: application/json" -X POST -u admin:admin -d @/etc/grafana/prometheus-dashboard-iota.json http://localhost:3000/api/dashboards/db

# set up nelson
sudo -u iota npm install -g nelson.cli
